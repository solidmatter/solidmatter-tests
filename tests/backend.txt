*** Settings ***
Library   SeleniumLibrary
Resource  ${RESOURCES}/common.txt

Suite Setup      Suite Setup
Suite Teardown   Suite Teardown
Test Setup       Test Setup
Test Teardown    Test Teardown


*** Variables ***


*** Keywords ***
Suite Setup
    Open Browser    ${BACKEND_URL}  browser=${BROWSER}
#    Maximize Browser Window

Suite Teardown
    Close All Browsers

Test Setup
    [Arguments]  ${url}=${BACKEND_URL}
    Go To  ${url}
    Login As  user=${ADMIN_USER}  password=${ADMIN_PASSWORD}
    Select Frame  name:navigation

Tree Entries Test Setup
    [Arguments]  ${locator}
    Test Setup
    Click Element   ${locator}

Context Menu Test Setup
    [Arguments]  ${locator}
    Test Setup
    Open Context Menu  ${locator}
    Element Should Be Visible  //*[@id="contextmenu"]

Workbench Test Setup
    [Arguments]  ${locator}
    Test Setup
    Click Element   ${locator}
    Unselect Frame  #go back to main frame
    Select Frame  name:main

Workbench Debug View Test Setup
    [Arguments]  ${locator}
    Workbench Test Setup  ${locator}
    Click Element  //span[contains(text(),'Debug')]

Test Teardown
    Logout

Tree Entries Should Be Present
    [Arguments]  ${locator}
    Wait Until Element Is Visible  ${locator}  1 Second

Context Menu Entry Should Be Present
    [Arguments]  ${locator}  ${text}
    Element Should Be Visible   ${locator}
    Element Should Contain      ${locator}  ${text}

Workbench Should Have View
    [Arguments]  ${viewName}
    Unselect Frame  #go back to main frame
    Select Frame  name:main
    Element Should Be Visible  //span[contains(text(),'${viewName}')]

Workbench Debug View Should Have Entry
    [Arguments]  ${entryName}
    ${workbenchElement}=  Get WebElement  //div[contains(@class, 'workbench')]
    Element Should Contain  ${workbenchElement}   ${entryName}

Is Checkbox Selected
    [Arguments]  ${locator}
    [Return]  ${value}
    ${element}=  Get WebElement  ${locator}
    Log  ${element}
    ${value}=  Get Element Attribute  ${element}  attribute=checked
    ${value}=  Set Variable If  '${value}' == 'true'  ${TRUE}  ${FALSE}

Click Element When Is Visible
    [Arguments]  ${locator}  ${timeout}=5 Seconds
    Wait Until Element Is Visible  ${locator}  ${timeout}
    Click Element  ${locator}

Navigate To Tree Element
    [Arguments]  @{elements}
    :FOR  ${element}  IN  @{elements}
    \  Click Element When Is Visible  ${element}

Open Tree To jcr_system:maintenance
    Unselect Frame  #go back to main frame
    Select Frame  name:navigation
    Navigate To Tree Element
    ...  //*[@id="entry:jcr_system"]/a[@class="toggle"]
    ...  //*[@id="entry:jcr_system:maintenance"]/a[@class="toggle"]

Close Tree from jcr_system:maintenance
    Unselect Frame  #go back to main frame
    Select Frame  name:navigation
    Navigate To Tree Element
    ...  //*[@id="entry:jcr_system:maintenance"]/a[@class="toggle"]
    ...  //*[@id="entry:jcr_system"]/a[@class="toggle"]

Open Registry
    Navigate To Tree Element
    ...  //*[@id=":jcr_system:maintenance:registry"]

    # switch frame
    Unselect Frame  #go back to main frame
    Select Frame  name:main

    Wait Until Element Is Visible  //span[contains(text(),'Edit')]
    Click Element  //span[contains(text(),'Edit')]

Click Registry Checkbox And Save
    [Arguments]  ${element}
    Set Focus to Element  ${element}
    Click Element    ${element}
    Click Element    //*[@value="Save"]

Enable Debug Menu In Registry
    Open Tree To jcr_system:maintenance
    Open Registry
    Wait Until Element Is Visible  //*[@for="sb_system_debug_menu_debugmode"]  5 Seconds
    ${enabled}=  Is Checkbox Selected  //*[@id="sb_system_debug_menu_debugmode"]
    Run Keyword If  '${enabled}' != '${TRUE}'  Click Registry Checkbox And Save  //*[@for="sb_system_debug_menu_debugmode"]
    Close Tree from jcr_system:maintenance

Disable Debug Menu In Registry
    Open Tree To jcr_system:maintenance
    Open Registry
    Wait Until Element Is Visible  //*[@for="sb_system_debug_menu_debugmode"]  5 Seconds
    ${enabled}=  Is Checkbox Selected  //*[@id="sb_system_debug_menu_debugmode"]
    Run Keyword If  '${enabled}' != '${FALSE}'  Click Registry Checkbox And Save  //*[@for="sb_system_debug_menu_debugmode"]
    Close Tree from jcr_system:maintenance

*** Test Cases ***
Test
    Enable Debug Menu In Registry
    Disable Debug Menu In Registry

Tree Entries - Root
    [Template]   Tree Entries Should Be Present

    //*[@id="entry:favorites"]
    //*[@id="entry:jcr_system"]
    //*[@id="entry:trashcan"]

Tree Entries - sbSystem:Preferences
    Navigate To Tree Element
    ...  //*[@id="entry:jcr_system"]/a[@class="toggle"]
    Tree Entries Should Be Present  //*[@id="entry:jcr_system:reports"]
    Tree Entries Should Be Present  //*[@id="entry:jcr_system:users"]
    Tree Entries Should Be Present  //*[@id="entry:jcr_system:modules"]
    Tree Entries Should Be Present  //*[@id="entry:jcr_system:maintenance"]

Tree Entries - sbSystem:Preferences:Reports
    Navigate To Tree Element
    ...  //*[@id="entry:jcr_system"]/a[@class="toggle"]
    ...  //*[@id="entry:jcr_system:reports"]/a[@class="toggle"]
    Tree Entries Should Be Present   //*[@id="entry:jcr_system:reports:reports_db"]
    Tree Entries Should Be Present   //*[@id="entry:jcr_system:reports:structure"]

Tree Entries - sbSystem:Preferences:Maintenance
    Navigate To Tree Element
    ...  //*[@id="entry:jcr_system"]/a[@class="toggle"]
    ...  //*[@id="entry:jcr_system:maintenance"]/a[@class="toggle"]
    Tree Entries Should Be Present   //*[@id="entry:jcr_system:maintenance:debug"]
    Tree Entries Should Be Present   //*[@id="entry:jcr_system:maintenance:logs"]
    Tree Entries Should Be Present   //*[@id="entry:jcr_system:maintenance:registry"]
    Tree Entries Should Be Present   //*[@id="entry:jcr_system:maintenance:tags"]

Context Menu - sbSystem:Root
    [Setup]  Context Menu Test Setup  locator=//html/body/div[5]/ul/li/a
    [Template]   Context Menu Entry Should Be Present

    //*[@id="contextmenu"]/ul/li[1]  New:
    # TBD ... sub entries
    # TBD ... sub entries
    # TBD ... sub entries
    //*[@id="contextmenu"]/ul/li[2]  Refresh
    //*[@id="contextmenu"]/ul/li[3]  Add favorite
    //*[@id="contextmenu"]/ul/li[4]  Export
    //*[@id="contextmenu"]/ul/li[5]  Primary

Context Menu - sbSystem:Favorites
    [Setup]  Context Menu Test Setup  locator=//*[@id=":favorites"]
    [Template]   Context Menu Entry Should Be Present

    //*[@id="contextmenu"]/ul/li[1]  New:
    //*[@id="contextmenu"]/ul/li[1]/ul/li/a/span  Favorites Folder
    //*[@id="contextmenu"]/ul/li[2]  Refresh
    //*[@id="contextmenu"]/ul/li[3]  Add favorite
    //*[@id="contextmenu"]/ul/li[4]  Cut
    //*[@id="contextmenu"]/ul/li[5]  Copy
    //*[@id="contextmenu"]/ul/li[6]  Export
    //*[@id="contextmenu"]/ul/li[7]  Primary
    //*[@id="contextmenu"]/ul/li[8]  Delete

Context Menu - sbSystem:Preferences
    [Setup]  Context Menu Test Setup  locator=//*[@id=":jcr_system"]
    [Template]   Context Menu Entry Should Be Present

    //*[@id="contextmenu"]/ul/li[1]  Refresh
    //*[@id="contextmenu"]/ul/li[2]  Add favorite
    //*[@id="contextmenu"]/ul/li[3]  Export
    //*[@id="contextmenu"]/ul/li[4]  Primary

Context Menu - sbSystem:Trashcan
    [Setup]  Context Menu Test Setup  locator=//*[@id=":trashcan"]
    [Template]   Context Menu Entry Should Be Present

    //*[@id="contextmenu"]/ul/li[1]  Refresh
    //*[@id="contextmenu"]/ul/li[2]  Add favorite
    //*[@id="contextmenu"]/ul/li[3]  Export
    //*[@id="contextmenu"]/ul/li[4]  Primary
    //*[@id="contextmenu"]/ul/li[5]  Purge

Workbench - sbSystem:Root
    [Setup]  Workbench Test Setup  locator=//html/body/div[5]/ul/li/a
    [Template]   Workbench Should Have View

    Welcome
    List
    Security
    Debug
    XML

Workbench - sbSystem:Root:Debug
    [Setup]  Workbench Debug View Test Setup  locator=//html/body/div[5]/ul/li/a
    [Template]   Workbench Debug View Should Have Entry

    Properties
    Hierarchy
    Tags
    LifecycleTransitions
    Supported Relations
    Supertypes
    Views
    Supported Authorisations
    User Authorisations
    Local Authorisations
    Inherited Authorisations

Workbench - sbSystem:Favorites
    [Setup]  Workbench Test Setup  locator=//*[@id=":favorites"]
    [Template]   Workbench Should Have View

    List
    Security
    Debug
    XML

Workbench - sbSystem:Preferences
    [Setup]  Workbench Test Setup  locator=//*[@id=":jcr_system"]
    [Template]   Workbench Should Have View

    Security
    Debug
    XML

Workbench - sbSystem:Trashcan
    [Setup]  Workbench Test Setup  locator=//*[@id=":trashcan"]
    [Template]   Workbench Should Have View

    Content
    Security
    Debug
    XML
